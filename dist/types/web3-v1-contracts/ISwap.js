"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.newISwap = exports.ABI = void 0;
exports.ABI = [
    {
        inputs: [],
        name: "paused",
        outputs: [{ internalType: "bool", name: "", type: "bool" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [{ internalType: "uint8", name: "index", type: "uint8" }],
        name: "getToken",
        outputs: [{ internalType: "address", name: "", type: "address" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getBalances",
        outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getSwapFee",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getAPrecise",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint8", name: "tokenIndexFrom", type: "uint8" },
            { internalType: "uint8", name: "tokenIndexTo", type: "uint8" },
            { internalType: "uint256", name: "dx", type: "uint256" },
            { internalType: "uint256", name: "minDy", type: "uint256" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
        ],
        name: "swap",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            { internalType: "uint8", name: "tokenIndexFrom", type: "uint8" },
            { internalType: "uint8", name: "tokenIndexTo", type: "uint8" },
            { internalType: "uint256", name: "dx", type: "uint256" },
        ],
        name: "calculateSwap",
        outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
        stateMutability: "view",
        type: "function",
    },
];
function newISwap(web3, address) {
    return new web3.eth.Contract(exports.ABI, address);
}
exports.newISwap = newISwap;
//# sourceMappingURL=ISwap.js.map