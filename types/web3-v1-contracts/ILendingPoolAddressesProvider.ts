/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  AbiItem,
  Callback,
  CeloTxObject,
  Contract,
  EventLog,
} from "@celo/connect";
import { EventEmitter } from "events";
import Web3 from "web3";
import { EventOptions } from "./types";

export interface ILendingPoolAddressesProvider extends Contract {
  clone(): ILendingPoolAddressesProvider;
  methods: {
    getLendingPool(): CeloTxObject<string>;

    setLendingPoolImpl(_pool: string): CeloTxObject<void>;

    getLendingPoolCore(): CeloTxObject<string>;

    setLendingPoolCoreImpl(_lendingPoolCore: string): CeloTxObject<void>;

    getLendingPoolConfigurator(): CeloTxObject<string>;

    setLendingPoolConfiguratorImpl(_configurator: string): CeloTxObject<void>;

    getLendingPoolDataProvider(): CeloTxObject<string>;

    setLendingPoolDataProviderImpl(_provider: string): CeloTxObject<void>;

    getLendingPoolParametersProvider(): CeloTxObject<string>;

    setLendingPoolParametersProviderImpl(
      _parametersProvider: string
    ): CeloTxObject<void>;

    getTokenDistributor(): CeloTxObject<string>;

    setTokenDistributor(_tokenDistributor: string): CeloTxObject<void>;

    getFeeProvider(): CeloTxObject<string>;

    setFeeProviderImpl(_feeProvider: string): CeloTxObject<void>;

    getLendingPoolLiquidationManager(): CeloTxObject<string>;

    setLendingPoolLiquidationManager(_manager: string): CeloTxObject<void>;

    getLendingPoolManager(): CeloTxObject<string>;

    setLendingPoolManager(_lendingPoolManager: string): CeloTxObject<void>;

    getPriceOracle(): CeloTxObject<string>;

    setPriceOracle(_priceOracle: string): CeloTxObject<void>;

    getLendingRateOracle(): CeloTxObject<string>;

    setLendingRateOracle(_lendingRateOracle: string): CeloTxObject<void>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
export const ABI: AbiItem[] = [
  {
    inputs: [],
    name: "getLendingPool",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_pool", type: "address" }],
    name: "setLendingPoolImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPoolCore",
    outputs: [{ internalType: "address payable", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_lendingPoolCore", type: "address" },
    ],
    name: "setLendingPoolCoreImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPoolConfigurator",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_configurator", type: "address" },
    ],
    name: "setLendingPoolConfiguratorImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPoolDataProvider",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_provider", type: "address" }],
    name: "setLendingPoolDataProviderImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPoolParametersProvider",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_parametersProvider", type: "address" },
    ],
    name: "setLendingPoolParametersProviderImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenDistributor",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_tokenDistributor", type: "address" },
    ],
    name: "setTokenDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeProvider",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_feeProvider", type: "address" },
    ],
    name: "setFeeProviderImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPoolLiquidationManager",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_manager", type: "address" }],
    name: "setLendingPoolLiquidationManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPoolManager",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_lendingPoolManager", type: "address" },
    ],
    name: "setLendingPoolManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceOracle",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_priceOracle", type: "address" },
    ],
    name: "setPriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingRateOracle",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_lendingRateOracle", type: "address" },
    ],
    name: "setLendingRateOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export function newILendingPoolAddressesProvider(
  web3: Web3,
  address: string
): ILendingPoolAddressesProvider {
  return new web3.eth.Contract(ABI, address) as any;
}
