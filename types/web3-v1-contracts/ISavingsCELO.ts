/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  AbiItem,
  Callback,
  CeloTxObject,
  Contract,
  EventLog,
} from "@celo/connect";
import { EventEmitter } from "events";
import Web3 from "web3";
import { EventOptions } from "./types";

export interface ISavingsCelo extends Contract {
  clone(): ISavingsCelo;
  methods: {
    deposit(): CeloTxObject<string>;

    celoToSavings(celoAmount: number | string): CeloTxObject<string>;

    savingsToCELO(savingsAmount: number | string): CeloTxObject<string>;
  };
  events: {
    allEvents: (
      options?: EventOptions,
      cb?: Callback<EventLog>
    ) => EventEmitter;
  };
}
export const ABI: AbiItem[] = [
  {
    inputs: [],
    name: "deposit",
    outputs: [{ internalType: "uint256", name: "toMint", type: "uint256" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "celoAmount", type: "uint256" }],
    name: "celoToSavings",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "savingsAmount", type: "uint256" },
    ],
    name: "savingsToCELO",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
];

export function newISavingsCelo(web3: Web3, address: string): ISavingsCelo {
  return new web3.eth.Contract(ABI, address) as any;
}
